#!/usr/bin/env bash

# Colors for output
RED="\033[0;31m"
GREEN="\033[0;32m"
YELLOW="\033[0;33m"
CYAN="\033[0;36m"
RESET="\033[0m"

# Function to install packages
install() {
    echo -e "${CYAN}Installing packages from packages.nix...${RESET}"
    if nix-env -iA -f /home/javier/.dotfiles/nix/packages.nix environment.systemPackages; then
        # clear
        echo -e "${GREEN}Packages installed correctly.${RESET}"
    else
        # clear
        echo -e "${RED}Error: Failed to install packages.${RESET}" >&2
        exit 1
    fi
}

# Function to remove all packages
remove_all() {
    echo -e "${CYAN}Removing all installed Nix packages...${RESET}"
    if nix-env -e "*" && nix-collect-garbage -d; then
        # clear
        echo -e "${GREEN}All Nix packages removed from nix-profile.${RESET}"
    else
        # clear
        echo -e "${RED}Error: Failed to remove packages.${RESET}" >&2
        exit 1
    fi
}

# Function to remove a single package
remove_one() {
    echo -e "${CYAN}Fetching installed packages...${RESET}"
    installed_packages=$(nix-env -q)
    if [[ -z "$installed_packages" ]]; then
        echo -e "${YELLOW}No installed packages found.${RESET}"
        return
    fi

    chosen=$(echo "$installed_packages" | fzf --prompt "Select a package to remove: ")

    if [[ -n "$chosen" ]]; then
        echo -e "${CYAN}Removing package: ${chosen}${RESET}"
        # clear
        if nix-env -e "$chosen"; then
            echo -e "${GREEN}Package '${chosen}' removed successfully.${RESET}"
        else
            echo -e "${RED}Error: Failed to remove '${chosen}'.${RESET}" >&2
            exit 1
        fi
    else
        # clear
        echo -e "${YELLOW}No package selected.${RESET}"
    fi
}

# Options
install_option="Install packages"
remove_all_option="Remove all packages"
remove_one_option="Remove a single package"

# Prompt user for choice
chosen=$(printf "%s\n%s\n%s\n" "$install_option" "$remove_all_option" "$remove_one_option" | fzf --prompt "Choose an action: ")

# Handle user's choice
case $chosen in
    "$install_option")
        install
        ;;
    "$remove_all_option")
        remove_all
        ;;
    "$remove_one_option")
        remove_one
        ;;
    *)
        echo -e "${YELLOW}Error: Invalid option. Please choose a valid option.${RESET}" >&2
        exit 1
        ;;
esac

